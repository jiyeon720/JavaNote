0-1. 키보드로부터 데이터를 입력 받는 방법
    1) Scanner [java.util class Scanner] / import java.util.Scanner;
    2) 작성방식
InputStream
in <- 사용

        Scanner scan = new Scanner(System.in)
        scan.close();
    3) int num = scan.nestInt();         // 정수입력
       float num = scan.nestFloat();     // 실수입력
       double num = scan.nestDauble();   // 실수 입력
       String str = scan.next();         // 문자역 입력 (공백 앞까지만 입력 받음) ex) 우리나라 좋은나라 -> '우리나라' 만 입력받음
       String str = scan.nextLine();     // 문자열 입력 (엔터까지 입력 받음) 버퍼 비운 후 공백까지 입력받을수 있음
                                         // 버퍼비우기

0-2. 콘솔 출력
    1) 콘솔
        - 컴퓨터를 대상으로 데이터를 입력 및 풀력하는 장치를 총칭하는 말임.
        - 대표장치 : 키보드, 모니터
    2) System.out.println()
       System.out.print()
       System.out.printf()
    3)printf()
        - 문자열의 내용을 조합하여 출력하는 기능 제공
        - System.out.printf("포맷 문자열", 데이터, 데이터, 데이터 .....)
        - 출력 서식 지정자
            -%d          10진수 정수 형태 출력
             %o          8진수 정수 형태 출력
             %x          16진수 정수 형태 출력
             %F          실수 출력
             %s          문자열 출력
             %c          문자 출력
        
        - ex)
            - System.out.printf("%d, %f, %c, %s",10, 3.14, 'A',"이순신") //순서가 맞아야함 %d = 10 %f = 3.14 와 같이

1. 항과 연산자
    1) 항(operand) : 연산에 사용되는 값 // 더하기연산자는 항이 2개 '이항연산자' [ex) 2+2] 항이 추가될수록 이항연산자,삼항연산자
    2) 연산자(operator) : 항을 이용하여 연산하는 기호

2. 연산자의 종류
    1)단항연산자(1), 이항연산자(2), 삼항연산자(3)

3. 대입 연산자 (assignment operator)
    1) 변수에 다른 변수나 값을 대입하는 연산자
    2) 이항 연산자 중 우선순위가 가장 낮은 연산자 / 가장 마지막
    3) 왼쪽변수 = 오른쪽 변수 (식, 값)

4. 단항연산자
    1) 부호 연산자
        - 변수의 부호를 유지하거나(+) 바뀜(-) / 당연히 = 와 같이씀 
        - 실제 변수의 부호가 변하려면 대입 연산자를 사용해야 함.  / 왼쪽변수 = 오른쪽 변수 (식, 값)
    2) 복합 대입 연산자
        - 대입 연산자와 다른 연산자가 함께 쓰임
        - 종류
        ex)
            a += b                  a = a + b
            a -= b                  a = a - b
            a *= b                  a = a * b 
            a /= b                  a = a / b
            a %= b                  a = a % b

        변수 (L-Value)     =    수식 (R-Value)

    3) 증가,증감 연산자
        - 변수의 값을 1 더하거나 1 뺄때 사용
        - 연산자가 항의 앞에 있는가, 뒤에 있는가에 따라 연산 시점과 결과가 달라짐
        - 증가연산자
            - ++
            - ++a       전위       a의 값 1 증가 => a의 값 사용 
              a++       후위       a의 값 사용 => a값 1 증가 
        - 감소연산자
            - --
            - --a       전위       a의 값 1 감소 => a의 값 사용  
              a--       후위       a의 값 사용 => a값 1 감소

5. 이항연산자
    1) 산술연산자
    2) 복합대입연산자
    3) 관계연산자
    4) 논리연산자

6. 산술연산자
    - 사칙연산자
    - + - *
    - / (몫)
    - % (나머지)

7. 관계연산자
    - 연산의 결과가 true(참), false(거짓) 으로 반환 됨
    - 비교 연산자
        -   >
            <  
            >=
            <=
            ==  두개 항의 값이 같으면 참, 다르면 거짓 반환
            !=  두개 항이 다르면 참, 아니면 거짓 반환

    - 조건문, 반복문의 조건식으로 많이 사용된다

8. 논리연산자
    - && (AND), || (OR), !(NOT)
    - 연산의 결과는 참(true)아니면 거짓(false)
    - 관계 연산자와 혼합하여 사용 됨
    
    - a && b 
        - 논리곱(and 연산)
        - a,b가 둘다 참이면 참이고, 그렇지 않으면 거짓

    - a || b 
        - 논리합(or 연산)
        - a, b 중 하나라도 참이면 참이고, 그렇지 않으면 거짓

    - short circuit evaluation 
        - 모든 항이 실행되지 않는 경우
        - 논리 곱(&&)은 두 항의 결과가 모두 true일 때만 결과가 true // 첫번째항이 false면 X
            - 앞의 항의 결과가 false이면 뒤 항의 결과를 평가하지 않음 [연산이 안됨]
        - 논이 합 (||)은 두 항의 결과가 모두 false일 때만 결과가 false
            - 앞의 항의 결과가 true이면 뒤 항의 결과를 평가하지 않음 [연산이 안됨]

9. 삼항연산자
    1) 조건 연산자가
    2) 조건식의 결과가 true인 경우와 false인 경우에 따라 다른 결과가 수행됨
    3) if (조건문)을 간단히 표현할 때 사용 할수 있음
    4) (조건식) ? A(참) : B(거짓)
        - 조건식이 '참'인 경우 결과값은 A
        - 조건식이 '거짓'인 경우 결과값은 B


